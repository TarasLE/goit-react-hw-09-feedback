{"version":3,"sources":["components/Statistics/Statictics.module.css","components/Feedback/FeedbackOption.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","App.module.css","components/Notification/Notification.js","components/Statistics/Statictics.js","components/Feedback/FeedbackOptions.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Notification","message","className","styles","Message","Statictics","good","neutral","bad","total","positivePercentage","Container","StatList","ContainerTotal","TotalData","FeedbackOptions","options","onLeaveFeedback","option","Object","keys","OptList","map","opt","OptItem","type","onClick","FeedbackBtn","Section","title","children","FeedbackTitle","App","useState","setGood","setNeutral","setBad","countTotalFeedback","positiveFeedbacks","Math","round","Number","event","prevState","ReactDOM","render","document","querySelector"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,SAAW,6BAA6B,UAAY,8BAA8B,eAAiB,mCAAmC,UAAY,gC,iBCApKD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,QAAU,gCAAgC,QAAU,gCAAgC,YAAc,sC,mBCAlKD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,cAAgB,iC,iBCAzED,EAAOC,QAAU,CAAC,UAAY,gCAAgC,QAAU,gC,gBCAxED,EAAOC,QAAU,CAAC,IAAM,mB,oHCGT,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACnC,OAAO,oBAAIC,UAAWC,IAAOC,QAAtB,SAAgCH,ICA5B,SAASI,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAKR,UAAWC,IAAOQ,UAAvB,SACGF,EAAQ,EACP,sBAAKP,UAAWC,IAAOQ,UAAvB,UACE,qBAAIT,UAAWC,IAAOS,SAAtB,UACE,6BACE,wCAAWN,OAEb,6BACE,2CAAcC,OAEhB,6BACE,uCAAUC,UAGd,sBAAKN,UAAWC,IAAOU,eAAvB,UACE,qBAAIX,UAAWC,IAAOW,UAAtB,mBAAwCL,KACxC,qBAAIP,UAAWC,IAAOW,UAAtB,gCACsBJ,EADtB,aAMJ,cAACV,EAAD,CAAcC,QAAQ,wB,4BC/Bf,SAASc,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC3CC,EAAM,YAAOC,OAAOC,KAAKJ,IAE/B,OACE,qBAAKd,UAAWC,IAAOQ,UAAvB,SACE,oBAAIT,UAAWC,IAAOkB,QAAtB,SACGH,EAAOI,KAAI,SAACC,GAAD,OACV,oBAAIrB,UAAWC,IAAOqB,QAAtB,SACE,wBACEC,KAAK,SACLC,QAAS,kBAAMT,EAAgBM,IAC/BrB,UAAWC,IAAOwB,YAHpB,SAKGJ,KAN+BA,U,oBCP/B,SAASK,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrC,OACI,sBAAK5B,UAAWC,IAAOQ,UAAvB,UACI,oBAAIT,UAAWC,IAAO4B,cAAtB,SAAsCF,IACrCC,K,qBCDE,SAASE,IACtB,IAD4B,EAEJC,mBAAS,GAFL,mBAErB3B,EAFqB,KAEf4B,EAFe,OAGED,mBAAS,GAHX,mBAGrB1B,EAHqB,KAGZ4B,EAHY,OAINF,mBAAS,GAJH,mBAIrBzB,EAJqB,KAIhB4B,EAJgB,KAsBtBC,EAAqB,WAEzB,OADc/B,EAAOC,EAAUC,GAU3B8B,EALGD,IAAuB,EAC1BE,KAAKC,MAAMC,OAAQnC,EAAO+B,IAAwB,MAClD,EAIA5B,EAAQ4B,IACd,OACE,sBAAKnC,UAAWC,IAAO6B,IAAvB,UACE,cAACJ,EAAD,CAASC,MAAM,wBAAf,SACE,cAACd,EAAD,CACEC,QAtCY,CAAEV,KAAM,EAAGC,QAAS,EAAGC,IAAK,GAuCxCS,gBAhCe,SAACyB,GACtB,OAAQA,GACN,IAAK,OACHR,GAAQ,SAACS,GAAD,OAAeA,EAAY,KACnC,MACF,IAAK,UACHR,GAAW,SAACQ,GAAD,OAAeA,EAAY,KACtC,MACF,IAAK,MACHP,GAAO,SAACO,GAAD,OAAeA,EAAY,OAwBhCrC,KAAMA,EACNC,QAASA,EACTC,IAAKA,MAIT,cAACoB,EAAD,CAASC,MAAM,aAAf,SACE,cAAC,EAAD,CACEvB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoB4B,SCxD9BM,IAASC,OAAO,cAACb,EAAD,IAASc,SAASC,cAAc,Y","file":"static/js/main.88970cde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatList\":\"Statictics_StatList__2zIZu\",\"Container\":\"Statictics_Container__3o7_0\",\"ContainerTotal\":\"Statictics_ContainerTotal__19lF6\",\"TotalData\":\"Statictics_TotalData__zcts8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"FeedbackOption_Container___LaEh\",\"OptList\":\"FeedbackOption_OptList__3KoE_\",\"OptItem\":\"FeedbackOption_OptItem__3P6Ku\",\"FeedbackBtn\":\"FeedbackOption_FeedbackBtn__iPQex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Section_Container__12e_W\",\"FeedbackTitle\":\"Section_FeedbackTitle__3aZIu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Notification_Container__1tFkT\",\"Message\":\"Notification_Message__1joZ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__GA4HL\"};","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './Notification.module.css'\r\n\r\nexport default function Notification({ message }) {\r\n    return <h2 className={styles.Message}>{message}</h2>\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Statictics.module.css\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nexport default function Statictics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <div className={styles.Container}>\r\n      {total > 0 ? (\r\n        <div className={styles.Container}>\r\n          <ul className={styles.StatList}>\r\n            <li>\r\n              <h2>Good: {good}</h2>\r\n            </li>\r\n            <li>\r\n              <h2>Neutral: {neutral}</h2>\r\n            </li>\r\n            <li>\r\n              <h2>Bad: {bad}</h2>\r\n            </li>\r\n          </ul>\r\n          <div className={styles.ContainerTotal}>\r\n            <h2 className={styles.TotalData}>Total:{total}</h2>\r\n            <h2 className={styles.TotalData}>\r\n              positive Feedback: {positivePercentage}%\r\n            </h2>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Notification message=\"No feedback given\"></Notification>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nStatictics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes, { object } from \"prop-types\";\r\nimport styles from \"./FeedbackOption.module.css\";\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  const option = [...Object.keys(options)];\r\n\r\n  return (\r\n    <div className={styles.Container}>\r\n      <ul className={styles.OptList}>\r\n        {option.map((opt) => (\r\n          <li className={styles.OptItem} key={opt}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onLeaveFeedback(opt)}\r\n              className={styles.FeedbackBtn}\r\n            >\r\n              {opt}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './Section.module.css'\r\n\r\nexport default function Section({ title, children }) {\r\n    return (\r\n        <div className={styles.Container}>\r\n            <h1 className={styles.FeedbackTitle}>{title}</h1>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.element,\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Statistics from \"./components/Statistics/Statictics\";\nimport FeedbackOptions from \"./components/Feedback/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport styles from \"./App.module.css\";\n\nexport default function App() {\n  const feedBackOpt = { good: 0, neutral: 0, bad: 0 };\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  //   useEffect(() => {}, [good, neutral, bad]);\n\n  const handleFeedback = (event) => {\n    switch (event) {\n      case \"good\":\n        setGood((prevState) => prevState + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prevState) => prevState + 1);\n        break;\n      case \"bad\":\n        setBad((prevState) => prevState + 1);\n        break;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return countTotalFeedback() > 0\n      ? Math.round(Number((good / countTotalFeedback()) * 100))\n      : 0;\n  };\n\n  const positiveFeedbacks = countPositiveFeedbackPercentage();\n  const total = countTotalFeedback();\n  return (\n    <div className={styles.App}>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={feedBackOpt}\n          onLeaveFeedback={handleFeedback}\n          good={good}\n          neutral={neutral}\n          bad={bad}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={positiveFeedbacks}\n        />\n      </Section>\n    </div>\n  );\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n\nconst statsDATA = []\nconst testObj = { good: 0, neutral: 0, bad: 0 }\n"],"sourceRoot":""}